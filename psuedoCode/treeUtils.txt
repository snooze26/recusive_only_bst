min(currentNode) { 
    if the left node is not true then return the node's data
    return the function recursively ran to the left 
}

******************

max(currentNode) { 
    if the right node is not true then return the node's data 
    return the function recursively ran to the right 
}

******************

height() { 
    An empty tree has a height of -1, and a tree with only one node has a height of 0. 
    if the current tree(root) is empty return -1 
    if the tree only has 1 node then return a height of 0 
    
    for a non empty tree the height is 1 plus the max of the heights of the node's left and right subtree 
}

******************

depth(value, currentNode) { 
    if the tree is empty return -1 
    create a dist variable and set to -1 
    if the value is eqaul to the currentNode.data return dist
    OR dist = depth(value, currentNode.left)
    OR dist = depth(value, currentNode.right)
             return dist + 1 
    return dist 
}